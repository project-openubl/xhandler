name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version"
        required: true
      next:
        description: "Next version"
        required: false
      branch:
        description: "The branch to use when releasing"
        required: true
        default: "master"
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
          cache: maven
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.branch }}
      - name: Set release version
        env:
          RELEASE_VERSION: ${{ github.event.inputs.version }}
        run: |
          mvn -B versions:set versions:commit -DnewVersion=$RELEASE_VERSION -Pprepare-release
          git config --global user.email "project.openubl.preview.bot@gmail.com"
          git config --global user.name "Project-Openubl Bot"
          git commit --signoff --allow-empty -a -m "üèÅ Releasing version $RELEASE_VERSION"
          git push origin HEAD:${{ github.event.inputs.branch }}

      - name: Prepare files
        run: mvn -Ppublication -DskipTests

      - name: JReleaser
        uses: jreleaser/release-action@v2
        env:
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          JRELEASER_PROJECT_VERSION: ${{ github.event.inputs.version }}
          JRELEASER_PRERELEASE_PATTERN: .*(?:Alpha|alpha|Beta|beta)[0-9]
          JRELEASER_ZULIP_API_KEY: ${{ secrets.JRELEASER_ZULIP_API_KEY }}
          JRELEASER_SLACK_TOKEN: ${{ secrets.JRELEASER_SLACK_TOKEN }}
          JRELEASER_SLACK_WEBHOOK: ${{ secrets.JRELEASER_SLACK_WEBHOOK }}
          JRELEASER_ARTICLE_GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.gpg_private_key }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.gpg_passphrase }}
          JRELEASER_NEXUS2_USERNAME: ${{ secrets.nexus_username }}
          JRELEASER_NEXUS2_PASSWORD: ${{ secrets.nexus_password }}


      - name: Set next version
        env:
          NEXT_VERSION: ${{ github.event.inputs.next }}
        run: |
          mvn -B versions:set versions:commit -DnewVersion=$NEXT_VERSION -Pprepare-release
          git config --global user.email "project.openubl.preview.bot@gmail.com"
          git config --global user.name "Project-Openubl Bot"
          git commit --signoff -a -m "‚¨ÜÔ∏è  Next version $NEXT_VERSION"
          git push origin HEAD:${{ github.event.inputs.branch }}